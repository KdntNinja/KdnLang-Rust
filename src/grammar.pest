//! KdnLang grammar definition for the Pest parser generator.

// Program is the entry point
program = { SOI ~ expr ~ EOI }

// Expression hierarchy following operator precedence
expr = { term ~ (add_op ~ term)* }
term = { factor ~ (mul_op ~ factor)* }
factor = { primary }
primary = { number | identifier | "(" ~ expr ~ ")" }

// Token types
number = @{ ASCII_DIGIT+ }
identifier = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC)* }

// Operators
add_op = { "+" | "-" }
mul_op = { "*" | "/" }

// Whitespace handling
WHITESPACE = _{ " " | "\t" | "\n" | "\r" }
